generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  emailVerified DateTime?
  name          String?
  plan          Plan      @default(FREE)
  stripeCustomerId String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  analyses      Analysis[]
  accounts      Account[]
  sessions      Session[]
}

model Analysis {
  id            String    @id @default(cuid())
  url           String
  userId        String?
  user          User?     @relation(fields: [userId], references: [id])
  
  seoScore      Int
  aiScore       Int
  overallScore  Int
  
  technicalSeo  Json
  onPageSeo     Json
  aiOptimization Json
  recommendations Json
  
  createdAt     DateTime  @default(now())
  
  @@index([userId])
  @@index([url])
}

enum Plan {
  FREE
  PRO
  AGENCY
  LIFETIME
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}